/* 
 * Define the different asymmetric encryption that is supported within Keiros. See networking reactor doc: 
 * https://docs.google.com/document/d/1y_5UD9mG6yO9jezmt0NnqPpGOn_tu2qSmUQ_gP678GM/edit?usp=sharing.
 */

syntax = "proto3";

option java_package = "com.keiros.security";
option java_outer_classname = "AsymmetricEncryptionClass";


package common.security;


message AsymmetricEncryption {
	// All the types of asymmetric encryption supported. 
	enum Types {
		// The primary type within Keiros. Will be used for encrypting connections.
		ECC = 0;
		// A supported type that can be used only for signing.
		ED25519 = 1;
		// Useful for dealing with the keys that are generated by AWS. 
		SSH_2_RSA = 2;
	}
	Types type = 1;


	// If there is a number of bits to go along with an encryption type. For example,
	// SSH_2_RSA can be with 1024, 2048 etc... 
	// See https://security.stackexchange.com/questions/62247/should-i-use-more-than-2048-bits-in-my-ssh-2-rsa-key. 
	int64 bits_for_encryption_method = 2;
}